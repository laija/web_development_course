Modules Apps and Controllers 

scope:
Is the special object AngularJS createsand I ask by a dependency injection 

Dependency injection : 
Givin a function an object. Rather than creating an object inside the fuction, you pass it to the function. 

Minification:
Shrinking the size of files for faster download, We normally add '.min' to the name of the file. so 'file.js' becomes 'file.min.js' so we cn tell the difference. 

Interpolation:
Creating a string by combining strings and placeholders. 
'My name is' + name is interpolated, and retults in 'My name is Tony'.

Directive:
An instruction to AngularJS to manipulate a pice of the DOM. They could be 'add a class', 'hide this', 'create this', etc. 
Las directivas son pequennas funciones o funcionalidades que se utilizan en las vistas, la etiquete de un componente es una directiva.

wartchers: 
In the Angular context, keeps track of the original value everytime an even gets trown

Digest loop:
goes trow every single variable  in the watch list to see if something has changed, compares old value to the new value and if one of these things have change then updates everywhere that is connected to it, anything in the DOM, and anywhere in the code, runs again to check if by changing that it might have change something else until all of the old values and the new values match. 



<script src="https://code.angularjs.org/1.3.0-rc.1/angular.min.js"></script>
<script src="https://netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"></script>

1.- Create Angular projects 

2.- Create projects with 
ng g component components/contact

3.-

	Citrix Receiver Client

file:///C:/Users/luis.rojas/Documents/web_development_course/Learn%20and%20Understand%20AngularJS/Code-Routing-Templates-Controllers-Part-1/Starter/pages/second.html
file:///C:/Users/luis.rojas/Documents/web_development_course/Learn%20and%20Understand%20AngularJS/Code-Routing-Templates-Controllers-Part-1/Starter/pages/second.html:



npm config set proxy http://10.121.11.33:8080
npm config set https-proxy http://10.121.11.33:8080





import { Component, OnInit } from '@angular/core'; //permite crear un componentes luego usando el decorardor, esto esta en @angular /core

// Definicion del propio componente, no es una funcion, sino aporta un funcionalidad a una clase,que van a modificar el comportamiento de la clase segun lo que se especifique 


@Component({
  selector: 'app-about',  // etiqueta donde se carga el componente
  templateUrl: './about.component.html',// platilla asociada al componente
  styleUrls: ['./about.component.css']
})

/
// decorador de la clase
export class AboutComponent implements OnInit { // usando export permite que la clase se use dentro de otro fichero 
	public title: string; // para usar cualquiera de estas propiedades en la platilla, se llaman con {{<propiedad_name>}}
	public subtitle: string;
	public email: string;

  // el constructor es un metodo, es el primer metodo que se carga al instanciar un objeto
  constructor() { 
  	this.title = "Luis Laija";
  	this.subtitle = "This is about me, This is my moment!!";
  	this .email = "laija.rojas@hcl.com";
  }

  // este es el metodo que corre despues del constructor en cualquier componente de angular  
  ngOnInit() {
  }

}

*ngIF: Es una directiva condicional, que nos provee de una funcionalidad a la etiqueta html 